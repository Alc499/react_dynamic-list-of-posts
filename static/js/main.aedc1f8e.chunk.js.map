{"version":3,"sources":["api/getData.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","getComments","_ref3","_callee3","_context3","getData","_ref4","_callee4","posts","users","comments","_context4","sent","map","post","objectSpread","user","find","id","userId","filter","comment","postId","User","react_default","createElement","className","name","email","Comment","body","CommentList","components_Comment","key","Post","state","isVisible","toggleComments","_this","setState","prevState","hideComments","props","title","components_User","Fragment","components_CommentList","type","onClick","concat","length","React","Component","PostList","components_Post","App","visiblePosts","isLoaded","isLoading","handleClick","setTimeout","handleFilter","event","value","target","toLowerCase","includes","trim","_this$state","htmlFor","onChange","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.aedc1f8e.chunk.js","sourcesContent":["const getPosts = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/users';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getComments = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/comments';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getData = async() => {\n  const posts = await getPosts();\n  const users = await getUsers();\n  const comments = await getComments();\n\n  return posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }));\n};\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"user-info\">\n    <div>{ user.name }</div>\n    <div>{ user.email }</div>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comment\">\n    <div className=\"comment__email\">{ comment.email }</div>\n    <h2 className=\"comment__name\">{ comment.name }</h2>\n    <p className=\"comment__text\">{ comment.body }</p>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    isVisible: false,\n  }\n\n  toggleComments = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible,\n    }));\n  }\n\n  hideComments = () => {\n    this.setState({\n      isVisible: false,\n    });\n  }\n\n  render() {\n    const { post } = this.props;\n    const { isVisible } = this.state;\n\n    return (\n      <article className=\"post\">\n        <h2 className=\"post__title\">{ post.title }</h2>\n\n        <User user={post.user} />\n\n        <p className=\"post__text\">{post.body}</p>\n\n        { isVisible ? (\n          <>\n            <CommentList\n              comments={post.comments}\n            />\n            <button\n              type=\"button\"\n              onClick={this.toggleComments}\n              className=\"comment-btn\"\n            >\n              Hide comments\n            </button>\n          </>\n\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.toggleComments}\n            className=\"comment-btn\"\n          >\n            {`Show comments (${post.comments.length})`}\n          </button>\n        )\n        }\n      </article>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.object.isRequired,\n    comments: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\n// import comments from '../api/comments';\n\nconst PostList = ({ posts }) => (\n  <div className=\"post-list-wrapper\">\n    {posts.map(post => (\n      <Post\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    visiblePosts: [],\n    isLoaded: false,\n    isLoading: false,\n  }\n\n  handleClick = async() => {\n    const posts = await getData();\n\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n        visiblePosts: posts,\n        posts,\n      });\n    }, 2000);\n  };\n\n  handleFilter = (event) => {\n    const { value } = event.target;\n\n    this.setState(prevState => ({\n      visiblePosts: prevState.posts.filter(\n        post => ((\n          post.title\n            .toLowerCase()\n            .includes(value\n              .toLowerCase()\n              .trim())\n        ) || (\n          post.body\n            .toLowerCase()\n            .includes(value\n              .toLowerCase()\n              .trim())\n        ))\n      ),\n    }));\n  }\n\n  render() {\n    const {\n      visiblePosts,\n      isLoaded,\n      isLoading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        { isLoaded ? (\n          <>\n            <h1>Dynamic list of posts</h1>\n\n            <div className=\"filter-wrapper\">\n              <label htmlFor=\"filter-input\">\n                Filter by title or text:\n                <input\n                  type=\"text\"\n                  id=\"filter-input\"\n                  className=\"filter-input\"\n                  onChange={this.handleFilter}\n                />\n              </label>\n            </div>\n\n            <PostList\n              posts={visiblePosts}\n            />\n          </>\n        ) : (\n          <button type=\"button\" onClick={this.handleClick} className=\"load-btn\">\n            {isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}