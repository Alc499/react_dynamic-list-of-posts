{"version":3,"sources":["api/getData.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","App.js","index.js"],"names":["getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","getComments","_ref3","_callee3","_context3","getData","_ref4","_callee4","posts","users","comments","_context4","sent","map","post","objectSpread","user","find","id","userId","filter","comment","postId","User","props","react_default","createElement","className","name","email","Comment","body","CommentList","components_Comment","key","Post","state","isVisible","showComments","_this","setState","hideComments","title","components_User","Fragment","components_CommentList","type","onClick","concat","length","React","Component","PostList","components_Post","App","visiblePosts","isLoaded","isLoading","handleClick","setTimeout","handleFilter","event","_event$target","target","value","prevState","toLowerCase","includes","trim","_this$state","htmlFor","onChange","components_PostList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.28e4b5d8.chunk.js","sourcesContent":["const getPosts = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/users';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getComments = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/comments';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getData = async() => {\n  const posts = await getPosts();\n  const users = await getUsers();\n  const comments = await getComments();\n\n  return posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }));\n};\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = props => (\n  <div className=\"user-info\">\n    <div>{ props.user.name }</div>\n    <div>{ props.user.email }</div>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = props => (\n  <div className=\"comment\">\n    <div className=\"comment__email\">{ props.comment.email }</div>\n    <h2 className=\"comment__name\">{ props.comment.name }</h2>\n    <p className=\"comment__text\">{ props.comment.body }</p>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    isVisible: false,\n  }\n\n  showComments = () => {\n    this.setState({\n      isVisible: true,\n    });\n  }\n\n  hideComments = () => {\n    this.setState({\n      isVisible: false,\n    });\n  }\n\n  render() {\n    const { post } = this.props;\n    const { isVisible } = this.state;\n\n    return (\n      <article className=\"post\">\n        <h2 className=\"post__title\">{ post.title }</h2>\n\n        <User user={post.user} />\n\n        <p className=\"post__text\">{post.body}</p>\n\n        { isVisible ? (\n          <>\n            <CommentList\n              comments={post.comments}\n            />\n            <button\n              type=\"button\"\n              onClick={this.hideComments}\n              className=\"comment-btn\"\n            >\n              Hide comments\n            </button>\n          </>\n\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.showComments}\n            className=\"comment-btn\"\n          >\n            {`Show comments (${post.comments.length})`}\n          </button>\n        )\n        }\n      </article>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.object.isRequired,\n    comments: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\n// import comments from '../api/comments';\n\nconst PostList = ({ posts }) => (\n  <div className=\"post-list-wrapper\">\n    {posts.map(post => (\n      <Post\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    visiblePosts: [],\n    isLoaded: false,\n    isLoading: false,\n  }\n\n  async componentDidMount() {\n    const posts = await getData();\n\n    this.setState({\n      visiblePosts: posts,\n      posts,\n    });\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleFilter = (event) => {\n    const { value, name } = event.target;\n\n    this.setState(prevState => ({\n      visiblePosts: prevState.posts.filter(\n        post => (\n          post[name]\n            .toLowerCase()\n            .includes(value\n              .toLowerCase()\n              .trim())\n        )\n      ),\n    }));\n  }\n\n  render() {\n    const {\n      visiblePosts,\n      isLoaded,\n      isLoading,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        { isLoaded ? (\n          <>\n            <h1>Dynamic list of posts</h1>\n\n            <div className=\"filter-inputs\">\n              <label htmlFor=\"name-input\">\n                Filter by title:\n                <input\n                  type=\"text\"\n                  id=\"title-input\"\n                  className=\"filter-input\"\n                  name=\"title\"\n                  onChange={this.handleFilter}\n                />\n              </label>\n              <label htmlFor=\"text-input\">\n                Filter by text:\n                <input\n                  type=\"text\"\n                  id=\"text-input\"\n                  className=\"filter-input\"\n                  name=\"body\"\n                  onChange={this.handleFilter}\n                />\n              </label>\n            </div>\n\n            <PostList\n              posts={visiblePosts}\n            />\n          </>\n        ) : (\n          <button type=\"button\" onClick={this.handleClick} className=\"load-btn\">\n            {isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}